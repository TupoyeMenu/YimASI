#pragma once

namespace JIT
{
	enum class Opcode : std::uint8_t //opcodes reversed from gta v eboot.bin
	{
		NOP,
		IADD,
		ISUB,
		IMUL,
		IDIV,
		IMOD,
		INOT,
		INEG,
		IEQ,
		INE,
		IGT,
		IGE,
		ILT,
		ILE,
		FADD,
		FSUB,
		FMUL,
		FDIV,
		FMOD,
		FNEG,
		FEQ,
		FNE,
		FGT,
		FGE,
		FLT,
		FLE,
		VADD,
		VSUB,
		VMUL,
		VDIV,
		VNEG,
		IAND,
		IOR,
		IXOR,
		I2F,
		F2I,
		F2V,
		PUSH_CONST_U8,
		PUSH_CONST_U8_U8,
		PUSH_CONST_U8_U8_U8,
		PUSH_CONST_U32,
		PUSH_CONST_F,
		DUP,
		DROP,
		NATIVE,
		ENTER,
		LEAVE,
		LOAD,
		STORE,
		STORE_REV,
		LOAD_N,
		STORE_N,
		ARRAY_U8,
		ARRAY_U8_LOAD,
		ARRAY_U8_STORE,
		LOCAL_U8,
		LOCAL_U8_LOAD,
		LOCAL_U8_STORE,
		STATIC_U8,
		STATIC_U8_LOAD,
		STATIC_U8_STORE,
		IADD_U8,
		IMUL_U8,
		IOFFSET,
		IOFFSET_U8,
		IOFFSET_U8_LOAD,
		IOFFSET_U8_STORE,
		PUSH_CONST_S16,
		IADD_S16,
		IMUL_S16,
		IOFFSET_S16,
		IOFFSET_S16_LOAD,
		IOFFSET_S16_STORE,
		ARRAY_U16,
		ARRAY_U16_LOAD,
		ARRAY_U16_STORE,
		LOCAL_U16,
		LOCAL_U16_LOAD,
		LOCAL_U16_STORE,
		STATIC_U16,
		STATIC_U16_LOAD,
		STATIC_U16_STORE,
		GLOBAL_U16,
		GLOBAL_U16_LOAD,
		GLOBAL_U16_STORE,
		J,
		JZ,
		IEQ_JZ,
		INE_JZ,
		IGT_JZ,
		IGE_JZ,
		ILT_JZ,
		ILE_JZ,
		CALL,
		LOCAL_U24,
		LOCAL_U24_LOAD,
		LOCAL_U24_STORE,
		GLOBAL_U24,
		GLOBAL_U24_LOAD,
		GLOBAL_U24_STORE,
		PUSH_CONST_U24,
		SWITCH,
		STRING,
		STRINGHASH,
		TEXT_LABEL_ASSIGN_STRING,
		TEXT_LABEL_ASSIGN_INT,
		TEXT_LABEL_APPEND_STRING,
		TEXT_LABEL_APPEND_INT,
		TEXT_LABEL_COPY,
		CATCH,
		THROW,
		CALLINDIRECT,
		PUSH_CONST_M1,
		PUSH_CONST_0,
		PUSH_CONST_1,
		PUSH_CONST_2,
		PUSH_CONST_3,
		PUSH_CONST_4,
		PUSH_CONST_5,
		PUSH_CONST_6,
		PUSH_CONST_7,
		PUSH_CONST_FM1,
		PUSH_CONST_F0,
		PUSH_CONST_F1,
		PUSH_CONST_F2,
		PUSH_CONST_F3,
		PUSH_CONST_F4,
		PUSH_CONST_F5,
		PUSH_CONST_F6,
		PUSH_CONST_F7,
		IS_BIT_SET
	};

	// {instruction name, {parameters, stack delta}}
	static const inline std::array<std::pair<const char*, std::pair<const std::string, int>>, 131> g_OpcodeArgs = {{
	    {"NOP", {"", 0}},
	    {"IADD", {"", -1}},
	    {"ISUB", {"", -1}},
	    {"IMUL", {"", -1}},
	    {"IDIV", {"", -1}},
	    {"IMOD", {"", -1}},
	    {"INOT", {"", 0}},
	    {"INEG", {"", 0}},
	    {"IEQ", {"", -1}},
	    {"INE", {"", -1}},
	    {"IGT", {"", -1}},
	    {"IGE", {"", -1}},
	    {"ILT", {"", -1}},
	    {"ILE", {"", -1}},
	    {"FADD", {"", -1}},
	    {"FSUB", {"", -1}},
	    {"FMUL", {"", -1}},
	    {"FDIV", {"", -1}},
	    {"FMOD", {"", -1}},
	    {"FNEG", {"", 0}},
	    {"FEQ", {"", -1}},
	    {"FNE", {"", -1}},
	    {"FGT", {"", -1}},
	    {"FGE", {"", -1}},
	    {"FLT", {"", -1}},
	    {"FLE", {"", -1}},
	    {"VADD", {"", -3}},
	    {"VSUB", {"", -3}},
	    {"VMUL", {"", -3}},
	    {"VDIV", {"", -3}},
	    {"VNEG", {"", 0}},
	    {"IAND", {"", -1}},
	    {"IOR", {"", -1}},
	    {"IXOR", {"", -1}},
	    {"I2F", {"", 0}},
	    {"F2I", {"", 0}},
	    {"F2V", {"", 2}},
	    {"PUSH_CONST_U8", {"b", 1}},
	    {"PUSH_CONST_U8_U8", {"bb", 2}},
	    {"PUSH_CONST_U8_U8_U8", {"bbb", 3}},
	    {"PUSH_CONST_U32", {"d", 1}},
	    {"PUSH_CONST_F", {"f", 1}},
	    {"DUP", {"", 1}},
	    {"DROP", {"", -1}},
	    {"NATIVE", {"bbb", 9999}}, // need to check params
	    {"ENTER", {"bs$", 0}}, // not really, but doesn't matter
	    {"LEAVE", {"bb", 9999}}, // depends on return type
	    {"LOAD", {"", 0}},
	    {"STORE", {"", -2}}, // both parameters are discarded
	    {"STORE_REV", {"", -1}},
	    {"LOAD_N", {"", 9999}}, // depends on stack
	    {"STORE_N", {"", 9999}}, // depends on stack
	    {"ARRAY_U8", {"b", -1}},
	    {"ARRAY_U8_LOAD", {"b", -1}},
	    {"ARRAY_U8_STORE", {"b", -3}},
	    {"LOCAL_U8", {"b", 1}},
	    {"LOCAL_U8_LOAD", {"b", 1}},
	    {"LOCAL_U8_STORE", {"b", -1}},
	    {"STATIC_U8", {"b", 1}},
	    {"STATIC_U8_LOAD", {"b", 1}},
	    {"STATIC_U8_STORE", {"b", -1}},
	    {"IADD_U8", {"b", 0}},
	    {"IMUL_U8", {"b", 0}},
	    {"IOFFSET", {"", -1}},
	    {"IOFFSET_U8", {"b", 0}},
	    {"IOFFSET_U8_LOAD", {"b", 0}},
	    {"IOFFSET_U8_STORE", {"b", -2}},
	    {"PUSH_CONST_S16", {"s", 1}},
	    {"IADD_S16", {"s", 0}},
	    {"IMUL_S16", {"s", 0}},
	    {"IOFFSET_S16", {"s", 0}},
	    {"IOFFSET_S16_LOAD", {"s", 0}},
	    {"IOFFSET_S16_STORE", {"s", -2}},
	    {"ARRAY_U16", {"h", -1}},
	    {"ARRAY_U16_LOAD", {"h", -1}},
	    {"ARRAY_U16_STORE", {"h", -3}},
	    {"LOCAL_U16", {"h", 1}},
	    {"LOCAL_U16_LOAD", {"h", 1}},
	    {"LOCAL_U16_STORE", {"h", -1}},
	    {"STATIC_U16", {"h", 1}},
	    {"STATIC_U16_LOAD", {"h", 1}},
	    {"STATIC_U16_STORE", {"h", -1}},
	    {"GLOBAL_U16", {"h", 1}},
	    {"GLOBAL_U16_LOAD", {"h", 1}},
	    {"GLOBAL_U16_STORE", {"h", -1}},
	    {"J", {"R", 0}},
	    {"JZ", {"R", -1}},
	    {"IEQ_JZ", {"R", -2}},
	    {"INE_JZ", {"R", -2}},
	    {"IGT_JZ", {"R", -2}},
	    {"IGE_JZ", {"R", -2}},
	    {"ILT_JZ", {"R", -2}},
	    {"ILE_JZ", {"R", -2}},
	    {"CALL", {"a", 0}}, // not really, but doesn't matter
	    {"STATIC_U24", {"a", 1}},
	    {"STATIC_U24_LOAD", {"a", 1}},
	    {"STATIC_U24_STORE", {"a", -1}},
	    {"GLOBAL_U24", {"a", 1}},
	    {"GLOBAL_U24_LOAD", {"a", 1}},
	    {"GLOBAL_U24_STORE", {"a", -1}},
	    {"PUSH_CONST_U24", {"a", 1}},
	    {"SWITCH", {"S", -1}},
	    {"STRING", {"", 0}},
	    {"STRINGHASH", {"", 0}}, // unused
	    {"TEXT_LABEL_ASSIGN_STRING", {"b", -2}},
	    {"TEXT_LABEL_ASSIGN_INT", {"b", -2}},
	    {"TEXT_LABEL_APPEND_STRING", {"b", -2}},
	    {"TEXT_LABEL_APPEND_INT", {"b", -2}},
	    {"TEXT_LABEL_COPY", {"", 9999}}, // depends on stack
	    {"CATCH", {"", 1}}, // unused
	    {"THROW", {"", 0}}, // unused
	    {"CALLINDIRECT", {"", 0xDEADBEEF}}, // impossible to know
	    {"PUSH_CONST_M1", {"", 1}},
	    {"PUSH_CONST_0", {"", 1}},
	    {"PUSH_CONST_1", {"", 1}},
	    {"PUSH_CONST_2", {"", 1}},
	    {"PUSH_CONST_3", {"", 1}},
	    {"PUSH_CONST_4", {"", 1}},
	    {"PUSH_CONST_5", {"", 1}},
	    {"PUSH_CONST_6", {"", 1}},
	    {"PUSH_CONST_7", {"", 1}},
	    {"PUSH_CONST_FM1", {"", 1}},
	    {"PUSH_CONST_F0", {"", 1}},
	    {"PUSH_CONST_F1", {"", 1}},
	    {"PUSH_CONST_F2", {"", 1}},
	    {"PUSH_CONST_F3", {"", 1}},
	    {"PUSH_CONST_F4", {"", 1}},
	    {"PUSH_CONST_F5", {"", 1}},
	    {"PUSH_CONST_F6", {"", 1}},
	    {"PUSH_CONST_F7", {"", 1}},
	    {"IS_BIT_SET", {"", -1}},
	}};
}